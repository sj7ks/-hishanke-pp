// client.js - God Level Frontend Logic

const API = "";

// ===== Utility =====
function $(selector) {
  return document.querySelector(selector);
}
function createEl(tag, className) {
  const el = document.createElement(tag);
  if (className) el.className = className;
  return el;
}

// ===== STATE =====
let products = [];
let cart = [];
let favorites = [];
let currentUser = null;

// ===== AUTH =====
async function login(username, password) {
  try {
    const res = await fetch(`${API}/login`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, password }),
    });
    const data = await res.json();
    if (data.success) {
      currentUser = data.user;
      localStorage.setItem("user", JSON.stringify(currentUser));
      showNotification(`Welcome, ${currentUser.username}! 🎉`);
      loadProducts();
      loadCart();
      loadFavorites();
    } else {
      showNotification("❌ Login failed", true);
    }
  } catch (err) {
    console.error(err);
    showNotification("⚠️ Error logging in", true);
  }
}

async function logout() {
  await fetch(`${API}/logout`, { method: "POST" });
  currentUser = null;
  localStorage.removeItem("user");
  cart = [];
  favorites = [];
  renderCart();
  renderFavorites();
  showNotification("Logged out 👋");
}

// ===== PRODUCTS =====
async function loadProducts() {
  const res = await fetch(`${API}/products`);
  products = await res.json();
  renderProducts();
}

// ===== CART =====
async function loadCart() {
  const res = await fetch(`${API}/cart`);
  if (res.ok) cart = await res.json();
  renderCart();
}

async function addToCart(productId, qty = 1) {
  const res = await fetch(`${API}/cart`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ productId, qty }),
  });
  const data = await res.json();
  if (data.success) {
    cart = data.cart;
    renderCart();
    showNotification("✅ Added to cart");
  }
}

// ===== FAVORITES =====
async function loadFavorites() {
  const res = await fetch(`${API}/favorites`);
  if (res.ok) favorites = await res.json();
  renderFavorites();
}

async function toggleFavorite(productId) {
  const res = await fetch(`${API}/favorites`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ productId }),
  });
  const data = await res.json();
  if (data.success) {
    favorites = data.favorites;
    renderFavorites();
    renderProducts(); // refresh hearts
  }
}

// ===== CHECKOUT =====
async function checkout() {
  const res = await fetch(`${API}/checkout`, { method: "POST" });
  const data = await res.json();
  if (data.success) {
    cart = [];
    renderCart();
    showNotification("🎉 Checkout complete! Order sent.");
  } else {
    showNotification("⚠️ Checkout failed", true);
  }
}

// ===== RENDER FUNCTIONS =====
function renderProducts() {
  const container = $(".products-container");
  container.innerHTML = "";

  products.forEach((p) => {
    const card = createEl("div", "product-card");

    const img = createEl("img");
    img.src = p.image || "images/placeholder.png";
    img.alt = p.name;
    card.appendChild(img);

    const name = createEl("h3");
    name.textContent = p.name;
    card.appendChild(name);

    const price = createEl("p");
    price.textContent = `$${p.price.toFixed(2)}`;
    card.appendChild(price);

    const favBtn = createEl("button", "fav-btn");
    favBtn.innerHTML = favorites.includes(p.id) ? "❤️" : "🤍";
    favBtn.onclick = () => toggleFavorite(p.id);
    card.appendChild(favBtn);

    const cartBtn = createEl("button", "buy-btn");
    cartBtn.textContent = "Add to Cart 🛒";
    cartBtn.onclick = () => addToCart(p.id, 1);
    card.appendChild(cartBtn);

    container.appendChild(card);
  });
}

function renderCart() {
  const dropdown = $(".cart-dropdown");
  dropdown.innerHTML = "";

  if (cart.length === 0) {
    dropdown.innerHTML = "<p>Your cart is empty 🛒</p>";
    return;
  }

  cart.forEach((item) => {
    const p = products.find((prod) => prod.id === item.productId);
    if (!p) return;

    const row = createEl("div", "cart-item");
    row.innerHTML = `${p.name} x${item.qty} - $${(p.price * item.qty).toFixed(
      2
    )}`;
    dropdown.appendChild(row);
  });

  const checkoutBtn = createEl("button", "checkout-btn");
  checkoutBtn.textContent = "Checkout ✅";
  checkoutBtn.onclick = checkout;
  dropdown.appendChild(checkoutBtn);
}

function renderFavorites() {
  const favScroller = $(".favorites-scroller");
  if (!favScroller) return;
  favScroller.innerHTML = "";

  favorites.forEach((id) => {
    const p = products.find((prod) => prod.id === id);
    if (!p) return;

    const favCard = createEl("div", "fav-card");
    favCard.innerHTML = `<img src="${p.image}" alt="${p.name}"><p>${p.name}</p>`;
    favScroller.appendChild(favCard);
  });
}

// ===== CART ICON TOGGLE =====
$("#cart-icon").addEventListener("click", () => {
  $(".cart-dropdown").classList.toggle("show");
});

// ===== NOTIFICATIONS =====
function showNotification(msg, isError = false) {
  const notif = $(".notification");
  notif.textContent = msg;
  notif.style.background = isError ? "#f87171" : "#ff7eb9";
  notif.style.display = "block";
  setTimeout(() => (notif.style.display = "none"), 2500);
}

// ===== INIT =====
window.addEventListener("DOMContentLoaded", () => {
  const savedUser = localStorage.getItem("user");
  if (savedUser) currentUser = JSON.parse(savedUser);

  loadProducts();
  if (currentUser) {
    loadCart();
    loadFavorites();
  }
});